# This is a basic workflow to help you get started with Actions

name: pypi_publish

# Controls when the workflow will run
on:
  push:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # 运行单元测试的 Job
  uni-test:
    name: Run Unit Tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: [ 3.8, 3.9, '3.10', '3.11', '3.12']
        os: [ ubuntu-latest, macOS-latest, windows-latest ]

    steps:
      - uses: actions/checkout@v4
      - name: Set up PDM
        uses: pdm-project/setup-pdm@v4
        with:
          python-version: ${{ matrix.python-version }}
          version: 2.15.3

      - name: Install dependencies
        run: |
          pdm sync -d -G testing
      - name: Run Tests
        run: |
          pdm run -v pytest tests

  uni-test-py313:
    name: Run Unit Tests For python3.13
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: ['3.13']
        os: [ ubuntu-latest, macOS-latest, windows-latest ]

    steps:
      - uses: actions/checkout@v4
      - name: Set up PDM
        uses: pdm-project/setup-pdm@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          pdm sync -d -G testing
      - name: Run Tests
        run: |
          pdm run -v pytest tests
  # This workflow contains a single job called "build"
  pypi-publish:
    name: upload release to PyPI
    runs-on: ubuntu-latest
    needs:
      - uni-test
      - uni-test-py313
    permissions:
      # 这个权限是为了私有仓库。
      contents: read
      # 重要提示：这个权限对于可信发布是必需的。
      id-token: write
    environment: pypi_publish  # 与 PyPI 上的环境名称一致
    steps:
      - uses: actions/checkout@v4

      - uses: pdm-project/setup-pdm@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8.x'

      - name: Publish package distributions to PyPI
        run: pdm publish || true

  pypi-publish-verify:
    name: verify release of PyPI
    runs-on: ubuntu-latest
    needs: pypi-publish
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8.x'

      - name: pip install toml
        run: pip install toml

      - name: Extract version from pyproject.toml
        id: extract_version
        run: |
          python -c "
          from pathlib import Path
          import textwrap
          import toml
          d = toml.loads(Path('pyproject.toml').read_text(encoding='utf-8'))
          print(d['project']['version'])
          " > version.txt
      - name: Read version
        run: echo "VERSION=$(cat version.txt)" >> $GITHUB_ENV
      - name: Verify PyPI upload
        run: pip install pyrunjs==$VERSION

